{"version":3,"file":"static/js/128.6b0ff640.chunk.js","mappings":"+LAOA,MAmDA,EAnDkBA,KAChB,MAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oBAAmBC,SAC9BL,GACCA,EAAUM,KAAKC,IACbJ,EAAAA,EAAAA,KAAA,MAAAE,UACEG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OACEC,UAAU,YACVK,IAAKF,EAAIG,IAAMH,EAAIG,IAAMH,EAAII,UAC7BC,IAAKL,EAAIM,QAEXL,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,qBAAoBC,SAAA,EACjCG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWC,SAAEE,EAAIM,QAC9BV,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAEE,EAAIO,SAC/BX,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWC,SAAEE,EAAIQ,WAEhCZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBC,SAAEE,EAAIS,oBAGzCR,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,sBAAqBC,SAAA,EAClCG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,YAAWC,SAAA,EACxBG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAIE,EAAIU,QAAQC,MAAM,KAAK,GAAG,SAC9BV,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAIE,EAAIU,QAAQC,MAAM,KAAK,GAAG,SAC9BV,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAIE,EAAIY,cAAc,QAErBZ,EAAIa,YAAYC,MACdC,GAAQA,EAAIC,oBAAoBC,QAAQ,YAAc,MACpDrB,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gBAEVG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,KAAAE,SAAIE,EAAIkB,QACRtB,EAAAA,EAAAA,KAAA,KAAAE,SAAIE,EAAIO,SACRX,EAAAA,EAAAA,KAAA,KAAAE,SAAIE,EAAIQ,QACRZ,EAAAA,EAAAA,KAAA,KAAAE,SAAIE,EAAIkB,cAGZtB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,oBAAmBC,SAAC,mBC9BzC,eAACqB,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OACrBG,OAAOC,gBAAgB,IAAIC,WAAWN,IAAOO,QAAO,CAACC,EAAIC,IAGrDD,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,MAGP,GAAG,CDjBaG,SAuCX,C,iEEnDV,MAeA,EAfiBC,KAIb/B,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,mCAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAC,0K","sources":["pages/Favorites/Favorites.jsx","../node_modules/nanoid/index.browser.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import \"./Favorites.css\";\r\nimport { selectFavorite } from \"../../redux/cars/carSelectors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../components/Card/Card.css\";\r\nimport { nanoid } from \"nanoid\";\r\nimport \"../HomePage/HomePage\";\r\n\r\nconst Favorites = () => {\r\n  const favorites = useSelector(selectFavorite);\r\n\r\n  return (\r\n    <div className=\"favorites-box\">\r\n      <ul className=\"favorites-catalog\">\r\n        {favorites &&\r\n          favorites.map((car) => (\r\n            <li key={nanoid()}>\r\n              <div className=\"card\">\r\n                <img\r\n                  className=\"image-car\"\r\n                  src={car.img ? car.img : car.photoLink}\r\n                  alt={car.make}\r\n                />\r\n                <div className=\"first-box-aboutCar\">\r\n                  <div className=\"item-box1\">\r\n                    <p className=\"text-Make\">{car.make}</p>\r\n                    <p className=\"text-model\">{car.model}</p>\r\n                    <p className=\"text-year\">{car.year}</p>\r\n                  </div>\r\n                  <div className=\"item-box\">\r\n                    <p className=\"text-rentalPrice\">{car.rentalPrice}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"second-box-aboutCar\">\r\n                  <div className=\"item-box2\">\r\n                    <p>{car.address.split(\",\")[1]} |</p>\r\n                    <p>{car.address.split(\",\")[2]} |</p>\r\n                    <p>{car.rentalCompany} |</p>\r\n\r\n                    {car.accessories.some(\r\n                      (str) => str.toLocaleLowerCase().indexOf(\"premium\") >= 0\r\n                    ) && <p>Premium</p>}\r\n                  </div>\r\n                  <div className=\"item-box2\">\r\n                    <p>{car.type}</p>\r\n                    <p>{car.model}</p>\r\n                    <p>{car.year}</p>\r\n                    <p>{car.type}</p>\r\n                  </div>\r\n                </div>\r\n                <button className=\"button-learn-more\">Learn more</button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React from \"react\";\r\nimport \"./HomePage.css\";\r\n\r\nconst HomePage = () => {\r\n \r\n\r\n  return (\r\n    <div className=\"box-text\">\r\n      <h1 className=\"title-text\">Fast & Easy way to rent a car</h1>\r\n      <h2 className=\"description-text\">\r\n        A fleet of more than 200 car classes and for every pocket allows us to\r\n        provide website clients with the best and most profitable offers for car\r\n        booking and rental.\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["Favorites","favorites","useSelector","selectFavorite","_jsx","className","children","map","car","_jsxs","src","img","photoLink","alt","make","model","year","rentalPrice","address","split","rentalCompany","accessories","some","str","toLocaleLowerCase","indexOf","type","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","HomePage"],"sourceRoot":""}